# ------------------------------------------------------------------------------------
# 引数定義 (ARG)
# ------------------------------------------------------------------------------------
ARG RUBY_VERSION=3.3.0
ARG NODE_VERSION=20
ARG BUNDLER_VERSION=2.5.3 # Bundlerのバージョンを固定して安定化

# ------------------------------------------------------------------------------------
# ステージ 1: base - 全てのステージの基礎となるRuby環境
# ------------------------------------------------------------------------------------
FROM ruby:${RUBY_VERSION}-slim AS base

# 基本的な環境変数を設定
ENV LANG C.UTF-8
ENV BUNDLE_PATH="vendor/bundle"
ENV BUNDLE_WITHOUT="development:test"

# OSパッケージを更新し、基本的なライブラリをインストール
RUN apt-get update -qq && apt-get install -y --no-install-recommends build-essential git libpq-dev

# ------------------------------------------------------------------------------------
# ステージ 2: gems - 本番用のgemをインストールする専用ステージ
# ------------------------------------------------------------------------------------
FROM base AS gems
WORKDIR /app

# Bundlerを特定のバージョンでインストール
RUN gem install bundler -v ${BUNDLER_VERSION}

# Gemfileをコピーして、本番用のgemのみをインストール
COPY Gemfile Gemfile.lock ./
RUN bundle install --jobs $(nproc) --retry 3

# ------------------------------------------------------------------------------------
# ステージ 3: assets_builder - 本番用アセットをビルドする専用ステージ
# ------------------------------------------------------------------------------------
FROM base AS assets_builder
WORKDIR /app

# 1. Node.js環境をセットアップ
#    Node.js公式イメージを一時的に利用して、Node.jsとYarnをコピー
FROM node:${NODE_VERSION}-slim AS node_builder
COPY --from=node_builder /usr/local/bin/node /usr/local/bin/
COPY --from=node_builder /opt/yarn-v* /opt/yarn
RUN ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn && \
    ln -s /opt/yarn/bin/yarnpkg /usr/local/bin/yarnpkg

# 2. 必要なファイルをコピー
COPY . .

# 3. gemとnpmパッケージをインストール
COPY --from=gems /app/vendor/bundle /app/vendor/bundle
RUN yarn install --frozen-lockfile

# 4. アセットをプリコンパイル
#    本番用の環境変数を設定
ENV RAILS_ENV="production"
#    ダミーのキーを設定してビルドを通過させる
ENV SECRET_KEY_BASE_DUMMY=1
RUN bundle exec rails assets:precompile

# ------------------------------------------------------------------------------------
# ステージ 4: development - 開発環境用ステージ
# ------------------------------------------------------------------------------------
FROM base AS development
WORKDIR /app

# 開発に必要なOSライブラリを追加
RUN apt-get update -qq && apt-get install -y --no-install-recommends nodejs npm
RUN npm install -g yarn

# Gemfileをコピーして、全てのgemをインストール
COPY Gemfile Gemfile.lock ./
ENV BUNDLE_WITHOUT=""
RUN bundle install --jobs $(nproc) --retry 3

# JavaScriptの依存関係をインストール
COPY package.json yarn.lock ./
RUN yarn install

# アプリケーションコード全体をコピー
COPY . .

# ------------------------------------------------------------------------------------
# ステージ 5: final - 最終的な本番実行イメージ
# ------------------------------------------------------------------------------------
FROM base AS final
WORKDIR /app

# 実行に必要な最小限のOSライブラリをインストール
RUN apt-get update -qq && \
    apt-get install -y --no-install-recommends \
       libpq5 \
       # もし画像処理などで他のライブラリが必要ならここに追加 (例: libvips)
    && rm -rf /var/lib/apt/lists/*

# gemsステージとassets_builderステージから必要なファイルのみをコピー
COPY --from=gems /app/vendor/bundle /app/vendor/bundle
COPY --from=assets_builder /app/public/assets /app/public/assets
COPY . .

# 実行に必要な環境変数を設定
ENV RAILS_ENV="production" \
    RAILS_LOG_TO_STDOUT="true" \
    RAILS_SERVE_STATIC_FILES="true"

EXPOSE 3000
CMD ["bundle", "exec", "puma", "-C", "config/puma.rb"]